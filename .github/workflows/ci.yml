name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    # 1) Use a matrix for OS + Python versions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      # 1) Check out the code
      - name: Check out code
        uses: actions/checkout@v3

      # 2) Set up Python with caching for pip
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            setup.py
            .github/workflows/ci.yml

      # 3) Install build dependencies
      - name: Install build dependencies
        run: pip install --upgrade pip setuptools wheel build

      # 4) Install test and lint dependencies
      - name: Install test and lint dependencies
        run: |
          pip install -e .[test] pytest pylint

      # 5) Run tests with pytest
      - name: Run tests with pytest
        run: pytest --maxfail=1 --disable-warnings -q

      # 6) Run linting with pylint
      - name: Run linting with pylint
        run: pylint src --ignore=tests --disable=missing-module-docstring,missing-class-docstring,missing-function-docstring,invalid-name,too-few-public-methods,too-many-arguments,too-many-instance-attributes,too-many-locals,too-many-statements,too-many-branches,too-many-return-statements --fail-under = 8.0
        env:
          PYTHONPATH: src

      # 7) Build the distribution
      - name: Build dist
        run: python -m build

      # 8) Upload artifacts
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-py${{ matrix.python-version }}
          path: dist